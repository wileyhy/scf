+ scr_max_age_of_tmp_files='1 minutes ago'
+ scr_repo_nm=scf
+ fn_bndry=' ~~~ ~~~ ~~~ '
+ fn_lvl=0
+ export fn_lvl fn_bndry
+ declare -nx nBL=BASH_LINENO nBS=BASH_SOURCE nF=FUNCNAME nL=LINENO
+ rand_i=4356
+ rand_uniq_str=scf.705850.4356
+ rand_lock_nm=scf.705850.4356.lock.d
+ rand_f_nm=scf.705850.4356.xtr
+ export rand_i rand_uniq_str rand_lock_nm rand_f_nm
+ declare -fx _erx
+ declare -t _erx
+ verb=('--')
+ declare -ax verb
+ declare -fx _post_src
+ declare -t _post_src
+ : 'Enable debugging'
+ . ./gardning 134 n y y
++ : './gardning:7 ./findscan:134'
++ _post_src ./gardning 8 134 n y y
++ [[ y == y ]]
++ verb=(-v --)
++ [[ y == y ]]
++ set -x
++ [[ n == y ]]
++ printf %b '\e[m'
++ : './gardning:9 ./findscan:134'
++ FUNCNEST=32
++ close_ps4='\n\e[0;104m+[${#nBS[@]}]${nBS[0]##*/}( ${nL} ) [$(( ${#nBS[@]} - 1 ))]${nBS[1]##*/}( ${nBL[0]} )${nF[0]} [$(( ${#nBS[@]} - 2 ))]${nBS[2]##*/}( ${nBL[1]} )${nF[1]} [$(( ${#nBS[@]} - 3 ))]${nBS[3]##*/}( ${nBL[2]} )${nF[2]} [$(( ${#nBS[@]} - 4 ))]${nBS[4]##*/}( ${nBL[3]} )${nF[3]} \e[m\n    |=\t=|> \e[0;93m '
++ far_ps4='\e[0;104m+ At:[${#nBS[@]}]$( cut -c -8 <<< ${nBS[0]##*/} )( ${nL} ) In:< $( cut -c -8 <<< ${nF[0]:-""} ) > Fr:[$(( ${#nBS[@]} - 1 ))]${nBS[1]##*/}( ${nBL[0]} ) \e[m > \e[0;93m '
+ At:[2]gardning( 18 ) In:<  > Fr:[1]findscan( 134 )  >  PS4='\e[0;104m+ At:[${#nBS[@]}]$( cut -c -8 <<< ${nBS[0]##*/} )( ${nL} ) In:< $( cut -c -8 <<< ${nF[0]:-""} ) > Fr:[$(( ${#nBS[@]} - 1 ))]${nBS[1]##*/}( ${nBL[0]} ) \e[m > \e[0;93m '
+ At:[2]gardning( 18 ) In:<  > Fr:[1]findscan( 134 )  >  export PS4
+ At:[2]gardning( 19 ) In:<  > Fr:[1]findscan( 134 )  >  export FUNCNEST close_ps4 far_ps4
+ At:[2]gardning( 45 ) In:<  > Fr:[1]findscan( 134 )  >  declare -fx _fun_trc
+ At:[2]gardning( 46 ) In:<  > Fr:[1]findscan( 134 )  >  declare -t _fun_trc
+ At:[2]gardning( 112 ) In:<  > Fr:[1]findscan( 134 )  >  declare -fx _trp_int
+ At:[2]gardning( 113 ) In:<  > Fr:[1]findscan( 134 )  >  declare -t _trp_int
+ At:[2]gardning( 119 ) In:<  > Fr:[1]findscan( 134 )  >  trap - INT
+ At:[2]gardning( 120 ) In:<  > Fr:[1]findscan( 134 )  >  trap _trp_int INT
+ At:[2]gardning( 261 ) In:<  > Fr:[1]findscan( 134 )  >  declare -fx _mkv_pre
+ At:[2]gardning( 262 ) In:<  > Fr:[1]findscan( 134 )  >  declare -t _mkv_pre
+ At:[2]gardning( 277 ) In:<  > Fr:[1]findscan( 134 )  >  declare -fx _mkv_now
+ At:[2]gardning( 278 ) In:<  > Fr:[1]findscan( 134 )  >  declare -t _mkv_now
+ At:[2]gardning( 322 ) In:<  > Fr:[1]findscan( 134 )  >  declare -fx _mkv_dlt
+ At:[2]gardning( 323 ) In:<  > Fr:[1]findscan( 134 )  >  declare -t _mkv_dlt
+ At:[2]gardning( 337 ) In:<  > Fr:[1]findscan( 134 )  >  declare -fx _mk_dlts
+ At:[2]gardning( 338 ) In:<  > Fr:[1]findscan( 134 )  >  declare -t _mk_dlts
+ At:[2]gardning( 357 ) In:<  > Fr:[1]findscan( 134 )  >  declare -fx _dbg_pmt
+ At:[2]gardning( 358 ) In:<  > Fr:[1]findscan( 134 )  >  declare -t _dbg_pmt
+ At:[2]gardning( 376 ) In:<  > Fr:[1]findscan( 134 )  >  declare -fx _xtrace_
+ At:[2]gardning( 377 ) In:<  > Fr:[1]findscan( 134 )  >  declare -t _xtrace_
+ At:[2]gardning( 382 ) In:<  > Fr:[1]findscan( 134 )  >  : '<> Delete any left over xtrace files from -mktemp -p /tmp-'
+ At:[2]gardning( 385 ) In:<  > Fr:[1]findscan( 134 )  >  xtr_time_f=/tmp/tmp.mtime_file.scf.705850.4356.xtr
+ At:[2]gardning( 388 ) In:<  > Fr:[1]findscan( 134 )  >  mktemp -p /tmp --suffix=.scf.705850.4356.xtr.E
+ At:[2]gardning( 388 ) In:<  > Fr:[1]findscan( 134 )  >  xtr_delta_sum_f=/tmp/tmp.wYlTmTrzJo.scf.705850.4356.xtr.E
+ At:[2]gardning( 389 ) In:<  > Fr:[1]findscan( 134 )  >  export rand_f_nm xtr_time_f xtr_delta_sum_f
+ At:[2]gardning( 390 ) In:<  > Fr:[1]findscan( 134 )  >  unset f xtr_rm_list xtr_files
+ At:[2]gardning( 393 ) In:<  > Fr:[1]findscan( 134 )  >  touch -d '1 minutes ago' /tmp/tmp.mtime_file.scf.705850.4356.xtr
+ At:[2]gardning( 398 ) In:<  > Fr:[1]findscan( 134 )  >  mapfile -d '' -t xtr_files
+ At:[2]gardning( 398 ) In:<  > Fr:[1]findscan( 134 )  >  find -P /tmp -maxdepth 1 -type f -name 'tmp.[a-zA-Z0-9]*.scf.[0-9]*.[0-9]*.xtr*' '!' -newer /tmp/tmp.mtime_file.scf.705850.4356.xtr '!' -name tmp.mtime_file.scf.705850.4356.xtr -print0
+ At:[2]gardning( 406 ) In:<  > Fr:[1]findscan( 134 )  >  for f in "${xtr_files[@]}"
+ At:[2]gardning( 407 ) In:<  > Fr:[1]findscan( 134 )  >  [[ -f /tmp/tmp.kjjKOtamJq.scf.705131.12768.xtr.A ]]
+ At:[2]gardning( 407 ) In:<  > Fr:[1]findscan( 134 )  >  [[ ! -L /tmp/tmp.kjjKOtamJq.scf.705131.12768.xtr.A ]]
+ At:[2]gardning( 407 ) In:<  > Fr:[1]findscan( 134 )  >  [[ -O /tmp/tmp.kjjKOtamJq.scf.705131.12768.xtr.A ]]
+ At:[2]gardning( 410 ) In:<  > Fr:[1]findscan( 134 )  >  chmod -v -- 000 /tmp/tmp.kjjKOtamJq.scf.705131.12768.xtr.A
mode of '/tmp/tmp.kjjKOtamJq.scf.705131.12768.xtr.A' changed from 0600 (rw-------) to 0000 (---------)
+ At:[2]gardning( 412 ) In:<  > Fr:[1]findscan( 134 )  >  xtr_rm_list+=("${f}")
+ At:[2]gardning( 406 ) In:<  > Fr:[1]findscan( 134 )  >  for f in "${xtr_files[@]}"
+ At:[2]gardning( 407 ) In:<  > Fr:[1]findscan( 134 )  >  [[ -f /tmp/tmp.V0RPHNEK8A.scf.705131.12768.xtr ]]
+ At:[2]gardning( 407 ) In:<  > Fr:[1]findscan( 134 )  >  [[ ! -L /tmp/tmp.V0RPHNEK8A.scf.705131.12768.xtr ]]
+ At:[2]gardning( 407 ) In:<  > Fr:[1]findscan( 134 )  >  [[ -O /tmp/tmp.V0RPHNEK8A.scf.705131.12768.xtr ]]
+ At:[2]gardning( 410 ) In:<  > Fr:[1]findscan( 134 )  >  chmod -v -- 000 /tmp/tmp.V0RPHNEK8A.scf.705131.12768.xtr
mode of '/tmp/tmp.V0RPHNEK8A.scf.705131.12768.xtr' changed from 0600 (rw-------) to 0000 (---------)
+ At:[2]gardning( 412 ) In:<  > Fr:[1]findscan( 134 )  >  xtr_rm_list+=("${f}")
+ At:[2]gardning( 406 ) In:<  > Fr:[1]findscan( 134 )  >  for f in "${xtr_files[@]}"
+ At:[2]gardning( 407 ) In:<  > Fr:[1]findscan( 134 )  >  [[ -f /tmp/tmp.EBwXmvKFM9.scf.705131.12768.xtr ]]
+ At:[2]gardning( 407 ) In:<  > Fr:[1]findscan( 134 )  >  [[ ! -L /tmp/tmp.EBwXmvKFM9.scf.705131.12768.xtr ]]
+ At:[2]gardning( 407 ) In:<  > Fr:[1]findscan( 134 )  >  [[ -O /tmp/tmp.EBwXmvKFM9.scf.705131.12768.xtr ]]
+ At:[2]gardning( 410 ) In:<  > Fr:[1]findscan( 134 )  >  chmod -v -- 000 /tmp/tmp.EBwXmvKFM9.scf.705131.12768.xtr
mode of '/tmp/tmp.EBwXmvKFM9.scf.705131.12768.xtr' changed from 0600 (rw-------) to 0000 (---------)
+ At:[2]gardning( 412 ) In:<  > Fr:[1]findscan( 134 )  >  xtr_rm_list+=("${f}")
+ At:[2]gardning( 406 ) In:<  > Fr:[1]findscan( 134 )  >  for f in "${xtr_files[@]}"
+ At:[2]gardning( 407 ) In:<  > Fr:[1]findscan( 134 )  >  [[ -f /tmp/tmp.mtime_file.scf.705131.12768.xtr ]]
+ At:[2]gardning( 407 ) In:<  > Fr:[1]findscan( 134 )  >  [[ ! -L /tmp/tmp.mtime_file.scf.705131.12768.xtr ]]
+ At:[2]gardning( 407 ) In:<  > Fr:[1]findscan( 134 )  >  [[ -O /tmp/tmp.mtime_file.scf.705131.12768.xtr ]]
+ At:[2]gardning( 410 ) In:<  > Fr:[1]findscan( 134 )  >  chmod -v -- 000 /tmp/tmp.mtime_file.scf.705131.12768.xtr
mode of '/tmp/tmp.mtime_file.scf.705131.12768.xtr' changed from 0644 (rw-r--r--) to 0000 (---------)
+ At:[2]gardning( 412 ) In:<  > Fr:[1]findscan( 134 )  >  xtr_rm_list+=("${f}")
+ At:[2]gardning( 406 ) In:<  > Fr:[1]findscan( 134 )  >  for f in "${xtr_files[@]}"
+ At:[2]gardning( 407 ) In:<  > Fr:[1]findscan( 134 )  >  [[ -f /tmp/tmp.tDctyWExK2.scf.705131.12768.xtr.E ]]
+ At:[2]gardning( 407 ) In:<  > Fr:[1]findscan( 134 )  >  [[ ! -L /tmp/tmp.tDctyWExK2.scf.705131.12768.xtr.E ]]
+ At:[2]gardning( 407 ) In:<  > Fr:[1]findscan( 134 )  >  [[ -O /tmp/tmp.tDctyWExK2.scf.705131.12768.xtr.E ]]
+ At:[2]gardning( 410 ) In:<  > Fr:[1]findscan( 134 )  >  chmod -v -- 000 /tmp/tmp.tDctyWExK2.scf.705131.12768.xtr.E
mode of '/tmp/tmp.tDctyWExK2.scf.705131.12768.xtr.E' changed from 0600 (rw-------) to 0000 (---------)
+ At:[2]gardning( 412 ) In:<  > Fr:[1]findscan( 134 )  >  xtr_rm_list+=("${f}")
+ At:[2]gardning( 406 ) In:<  > Fr:[1]findscan( 134 )  >  for f in "${xtr_files[@]}"
+ At:[2]gardning( 407 ) In:<  > Fr:[1]findscan( 134 )  >  [[ -f /tmp/tmp.bGKNeo60yt.scf.704459.22924.xtr.A ]]
+ At:[2]gardning( 407 ) In:<  > Fr:[1]findscan( 134 )  >  [[ ! -L /tmp/tmp.bGKNeo60yt.scf.704459.22924.xtr.A ]]
+ At:[2]gardning( 407 ) In:<  > Fr:[1]findscan( 134 )  >  [[ -O /tmp/tmp.bGKNeo60yt.scf.704459.22924.xtr.A ]]
+ At:[2]gardning( 410 ) In:<  > Fr:[1]findscan( 134 )  >  chmod -v -- 000 /tmp/tmp.bGKNeo60yt.scf.704459.22924.xtr.A
mode of '/tmp/tmp.bGKNeo60yt.scf.704459.22924.xtr.A' changed from 0600 (rw-------) to 0000 (---------)
+ At:[2]gardning( 412 ) In:<  > Fr:[1]findscan( 134 )  >  xtr_rm_list+=("${f}")
+ At:[2]gardning( 406 ) In:<  > Fr:[1]findscan( 134 )  >  for f in "${xtr_files[@]}"
+ At:[2]gardning( 407 ) In:<  > Fr:[1]findscan( 134 )  >  [[ -f /tmp/tmp.xRHw6MCRZF.scf.704459.22924.xtr ]]
+ At:[2]gardning( 407 ) In:<  > Fr:[1]findscan( 134 )  >  [[ ! -L /tmp/tmp.xRHw6MCRZF.scf.704459.22924.xtr ]]
+ At:[2]gardning( 407 ) In:<  > Fr:[1]findscan( 134 )  >  [[ -O /tmp/tmp.xRHw6MCRZF.scf.704459.22924.xtr ]]
+ At:[2]gardning( 410 ) In:<  > Fr:[1]findscan( 134 )  >  chmod -v -- 000 /tmp/tmp.xRHw6MCRZF.scf.704459.22924.xtr
mode of '/tmp/tmp.xRHw6MCRZF.scf.704459.22924.xtr' changed from 0600 (rw-------) to 0000 (---------)
+ At:[2]gardning( 412 ) In:<  > Fr:[1]findscan( 134 )  >  xtr_rm_list+=("${f}")
+ At:[2]gardning( 406 ) In:<  > Fr:[1]findscan( 134 )  >  for f in "${xtr_files[@]}"
+ At:[2]gardning( 407 ) In:<  > Fr:[1]findscan( 134 )  >  [[ -f /tmp/tmp.WnfL4hgVxA.scf.704459.22924.xtr ]]
+ At:[2]gardning( 407 ) In:<  > Fr:[1]findscan( 134 )  >  [[ ! -L /tmp/tmp.WnfL4hgVxA.scf.704459.22924.xtr ]]
+ At:[2]gardning( 407 ) In:<  > Fr:[1]findscan( 134 )  >  [[ -O /tmp/tmp.WnfL4hgVxA.scf.704459.22924.xtr ]]
+ At:[2]gardning( 410 ) In:<  > Fr:[1]findscan( 134 )  >  chmod -v -- 000 /tmp/tmp.WnfL4hgVxA.scf.704459.22924.xtr
mode of '/tmp/tmp.WnfL4hgVxA.scf.704459.22924.xtr' changed from 0600 (rw-------) to 0000 (---------)
+ At:[2]gardning( 412 ) In:<  > Fr:[1]findscan( 134 )  >  xtr_rm_list+=("${f}")
+ At:[2]gardning( 406 ) In:<  > Fr:[1]findscan( 134 )  >  for f in "${xtr_files[@]}"
+ At:[2]gardning( 407 ) In:<  > Fr:[1]findscan( 134 )  >  [[ -f /tmp/tmp.vHHsHAFQt2.scf.704459.22924.xtr.E ]]
+ At:[2]gardning( 407 ) In:<  > Fr:[1]findscan( 134 )  >  [[ ! -L /tmp/tmp.vHHsHAFQt2.scf.704459.22924.xtr.E ]]
+ At:[2]gardning( 407 ) In:<  > Fr:[1]findscan( 134 )  >  [[ -O /tmp/tmp.vHHsHAFQt2.scf.704459.22924.xtr.E ]]
+ At:[2]gardning( 410 ) In:<  > Fr:[1]findscan( 134 )  >  chmod -v -- 000 /tmp/tmp.vHHsHAFQt2.scf.704459.22924.xtr.E
mode of '/tmp/tmp.vHHsHAFQt2.scf.704459.22924.xtr.E' changed from 0600 (rw-------) to 0000 (---------)
+ At:[2]gardning( 412 ) In:<  > Fr:[1]findscan( 134 )  >  xtr_rm_list+=("${f}")
+ At:[2]gardning( 415 ) In:<  > Fr:[1]findscan( 134 )  >  unset f
+ At:[2]gardning( 418 ) In:<  > Fr:[1]findscan( 134 )  >  [[ -n /tmp/tmp.kjjKOtamJq.scf.705131.12768.xtr.A /tmp/tmp.V0RPHNEK8A.scf.705131.12768.xtr /tmp/tmp.EBwXmvKFM9.scf.705131.12768.xtr /tmp/tmp.mtime_file.scf.705131.12768.xtr /tmp/tmp.tDctyWExK2.scf.705131.12768.xtr.E /tmp/tmp.bGKNeo60yt.scf.704459.22924.xtr.A /tmp/tmp.xRHw6MCRZF.scf.704459.22924.xtr /tmp/tmp.WnfL4hgVxA.scf.704459.22924.xtr ]]
+ At:[2]gardning( 419 ) In:<  > Fr:[1]findscan( 134 )  >  rm -f --one-file-system --preserve-root=all -v -- /tmp/tmp.kjjKOtamJq.scf.705131.12768.xtr.A /tmp/tmp.V0RPHNEK8A.scf.705131.12768.xtr /tmp/tmp.EBwXmvKFM9.scf.705131.12768.xtr /tmp/tmp.mtime_file.scf.705131.12768.xtr /tmp/tmp.tDctyWExK2.scf.705131.12768.xtr.E /tmp/tmp.bGKNeo60yt.scf.704459.22924.xtr.A /tmp/tmp.xRHw6MCRZF.scf.704459.22924.xtr /tmp/tmp.WnfL4hgVxA.scf.704459.22924.xtr /tmp/tmp.vHHsHAFQt2.scf.704459.22924.xtr.E
removed '/tmp/tmp.kjjKOtamJq.scf.705131.12768.xtr.A'
removed '/tmp/tmp.V0RPHNEK8A.scf.705131.12768.xtr'
removed '/tmp/tmp.EBwXmvKFM9.scf.705131.12768.xtr'
removed '/tmp/tmp.mtime_file.scf.705131.12768.xtr'
removed '/tmp/tmp.tDctyWExK2.scf.705131.12768.xtr.E'
removed '/tmp/tmp.bGKNeo60yt.scf.704459.22924.xtr.A'
removed '/tmp/tmp.xRHw6MCRZF.scf.704459.22924.xtr'
removed '/tmp/tmp.WnfL4hgVxA.scf.704459.22924.xtr'
removed '/tmp/tmp.vHHsHAFQt2.scf.704459.22924.xtr.E'
+ At:[2]gardning( 422 ) In:<  > Fr:[1]findscan( 134 )  >  unset xtr_rm_list xtr_files
+ At:[2]gardning( 427 ) In:<  > Fr:[1]findscan( 134 )  >  _xtrace_ 3580
+ At:[3]gardning( 366 ) In:< _xtrace_ > Fr:[2]gardning( 427 )  >  : 'xtr_files=?"_xtrace_"' BEGINS ' ~~~ ~~~ ~~~ ' '0>1'
+ At:[3]gardning( 369 ) In:< _xtrace_ > Fr:[2]gardning( 427 )  >  : './gardning:369 ./gardning:427, 28666'
+ At:[3]gardning( 370 ) In:< _xtrace_ > Fr:[2]gardning( 427 )  >  trap 'echo DEBUG trap; _fun_trc; : "${nBS[0]}:${nL} ${nBS[1]}:${nBL[0]}  |  PIUSV"; _dbg_pmt "$_"; : "${nBS[0]}:${nL} ${nBS[1]}:${nBL[0]}"' DEBUG
+ At:[3]gardning( 371 ) In:< _xtrace_ > Fr:[2]gardning( 427 )  >  echo DEBUG trap
DEBUG trap
+ At:[3]gardning( 371 ) In:< _xtrace_ > Fr:[2]gardning( 427 )  >  _fun_trc
+ At:[4]gardning( 25 ) In:< _fun_trc > Fr:[3]gardning( 371 )  >  : 'trap=?"_fun_trc"' BEGINS ' ~~~ ~~~ ~~~ ' '1>2'
+ At:[4]gardning( 25 ) In:< _fun_trc > Fr:[3]gardning( 371 )  >  local line_hyphen=25:huxBCET
+ At:[4]gardning( 26 ) In:< _fun_trc > Fr:[3]gardning( 371 )  >  local line=25
+ At:[4]gardning( 27 ) In:< _fun_trc > Fr:[3]gardning( 371 )  >  local hyphen=huxBCET
+ At:[4]gardning( 28 ) In:< _fun_trc > Fr:[3]gardning( 371 )  >  unset line_hyphen
+ At:[4]gardning( 29 ) In:< _fun_trc > Fr:[3]gardning( 371 )  >  local i
+ At:[4]gardning( 30 ) In:< _fun_trc > Fr:[3]gardning( 371 )  >  local -a ir
+ At:[4]gardning( 31 ) In:< _fun_trc > Fr:[3]gardning( 371 )  >  mapfile -t ir
+ At:[4]gardning( 31 ) In:< _fun_trc > Fr:[3]gardning( 371 )  >  tr ' ' '\n'
+ At:[4]gardning( 31 ) In:< _fun_trc > Fr:[3]gardning( 371 )  >  rev
+ At:[4]gardning( 35 ) In:< _fun_trc > Fr:[3]gardning( 371 )  >  for i in "${ir[@]}"
+ At:[4]gardning( 37 ) In:< _fun_trc > Fr:[3]gardning( 371 )  >  printf '( -%d ):%s:%s:%s  ' 3 ./findscan 0 main
( -3 ):./findscan:0:main  + At:[4]gardning( 35 ) In:< _fun_trc > Fr:[3]gardning( 371 )  >  for i in "${ir[@]}"
+ At:[4]gardning( 37 ) In:< _fun_trc > Fr:[3]gardning( 371 )  >  printf '( -%d ):%s:%s:%s  ' 2 ./findscan 134 source
( -2 ):./findscan:134:source  + At:[4]gardning( 35 ) In:< _fun_trc > Fr:[3]gardning( 371 )  >  for i in "${ir[@]}"
+ At:[4]gardning( 37 ) In:< _fun_trc > Fr:[3]gardning( 371 )  >  printf '( -%d ):%s:%s:%s  ' 1 ./gardning 427 _xtrace_
( -1 ):./gardning:427:_xtrace_  + At:[4]gardning( 35 ) In:< _fun_trc > Fr:[3]gardning( 371 )  >  for i in "${ir[@]}"
+ At:[4]gardning( 37 ) In:< _fun_trc > Fr:[3]gardning( 371 )  >  printf '( -%d ):%s:%s:%s  ' 0 ./gardning 371 _fun_trc
( -0 ):./gardning:371:_fun_trc  + At:[4]gardning( 40 ) In:< _fun_trc > Fr:[3]gardning( 371 )  >  echo '( +1 ):./gardning:25:_fun_trc:40'
( +1 ):./gardning:25:_fun_trc:40
+ At:[4]gardning( 41 ) In:< _fun_trc > Fr:[3]gardning( 371 )  >  [[ huxBCET =~ x ]]
+ At:[4]gardning( 42 ) In:< _fun_trc > Fr:[3]gardning( 371 )  >  set -x
+ At:[4]gardning( 43 ) In:< _fun_trc > Fr:[3]gardning( 371 )  >  : '_fun_trc ENDS' ' ~~~ ~~~ ~~~ ' '2>1'
+ At:[3]gardning( 371 ) In:< _xtrace_ > Fr:[2]gardning( 427 )  >  : './gardning:371 ./gardning:427  |  PIUSV'
+ At:[3]gardning( 371 ) In:< _xtrace_ > Fr:[2]gardning( 427 )  >  _dbg_pmt './gardning:371 ./gardning:427  |  PIUSV'
+ At:[4]gardning( 341 ) In:< _dbg_pmt > Fr:[3]gardning( 371 )  >  : '_dbg_pmt BEGINS' ' ~~~ ~~~ ~~~ ' '1>2'
+ At:[4]gardning( 343 ) In:< _dbg_pmt > Fr:[3]gardning( 371 )  >  echo _dbg_pmt
_dbg_pmt
+ At:[4]gardning( 344 ) In:< _dbg_pmt > Fr:[3]gardning( 371 )  >  _fun_trc
+ At:[5]gardning( 25 ) In:< _fun_trc > Fr:[4]gardning( 344 )  >  : '_dbg_pmt=?"_fun_trc"' BEGINS ' ~~~ ~~~ ~~~ ' '2>3'
+ At:[5]gardning( 25 ) In:< _fun_trc > Fr:[4]gardning( 344 )  >  local line_hyphen=25:huxBCET
+ At:[5]gardning( 26 ) In:< _fun_trc > Fr:[4]gardning( 344 )  >  local line=25
+ At:[5]gardning( 27 ) In:< _fun_trc > Fr:[4]gardning( 344 )  >  local hyphen=huxBCET
+ At:[5]gardning( 28 ) In:< _fun_trc > Fr:[4]gardning( 344 )  >  unset line_hyphen
+ At:[5]gardning( 29 ) In:< _fun_trc > Fr:[4]gardning( 344 )  >  local i
+ At:[5]gardning( 30 ) In:< _fun_trc > Fr:[4]gardning( 344 )  >  local -a ir
+ At:[5]gardning( 31 ) In:< _fun_trc > Fr:[4]gardning( 344 )  >  mapfile -t ir
+ At:[5]gardning( 31 ) In:< _fun_trc > Fr:[4]gardning( 344 )  >  rev
+ At:[5]gardning( 31 ) In:< _fun_trc > Fr:[4]gardning( 344 )  >  tr ' ' '\n'
+ At:[5]gardning( 35 ) In:< _fun_trc > Fr:[4]gardning( 344 )  >  for i in "${ir[@]}"
+ At:[5]gardning( 37 ) In:< _fun_trc > Fr:[4]gardning( 344 )  >  printf '( -%d ):%s:%s:%s  ' 4 ./findscan 0 main
( -4 ):./findscan:0:main  + At:[5]gardning( 35 ) In:< _fun_trc > Fr:[4]gardning( 344 )  >  for i in "${ir[@]}"
+ At:[5]gardning( 37 ) In:< _fun_trc > Fr:[4]gardning( 344 )  >  printf '( -%d ):%s:%s:%s  ' 3 ./findscan 134 source
( -3 ):./findscan:134:source  + At:[5]gardning( 35 ) In:< _fun_trc > Fr:[4]gardning( 344 )  >  for i in "${ir[@]}"
+ At:[5]gardning( 37 ) In:< _fun_trc > Fr:[4]gardning( 344 )  >  printf '( -%d ):%s:%s:%s  ' 2 ./gardning 427 _xtrace_
( -2 ):./gardning:427:_xtrace_  + At:[5]gardning( 35 ) In:< _fun_trc > Fr:[4]gardning( 344 )  >  for i in "${ir[@]}"
+ At:[5]gardning( 37 ) In:< _fun_trc > Fr:[4]gardning( 344 )  >  printf '( -%d ):%s:%s:%s  ' 1 ./gardning 371 _dbg_pmt
( -1 ):./gardning:371:_dbg_pmt  + At:[5]gardning( 35 ) In:< _fun_trc > Fr:[4]gardning( 344 )  >  for i in "${ir[@]}"
+ At:[5]gardning( 37 ) In:< _fun_trc > Fr:[4]gardning( 344 )  >  printf '( -%d ):%s:%s:%s  ' 0 ./gardning 344 _fun_trc
( -0 ):./gardning:344:_fun_trc  + At:[5]gardning( 40 ) In:< _fun_trc > Fr:[4]gardning( 344 )  >  echo '( +1 ):./gardning:25:_fun_trc:40'
( +1 ):./gardning:25:_fun_trc:40
+ At:[5]gardning( 41 ) In:< _fun_trc > Fr:[4]gardning( 344 )  >  [[ huxBCET =~ x ]]
+ At:[5]gardning( 42 ) In:< _fun_trc > Fr:[4]gardning( 344 )  >  set -x
+ At:[5]gardning( 43 ) In:< _fun_trc > Fr:[4]gardning( 344 )  >  : '_fun_trc ENDS' ' ~~~ ~~~ ~~~ ' '3>2'
+ At:[4]gardning( 345 ) In:< _dbg_pmt > Fr:[3]gardning( 371 )  >  local hyphen=huxBCET
+ At:[4]gardning( 347 ) In:< _dbg_pmt > Fr:[3]gardning( 371 )  >  _mk_dlts
+ At:[5]gardning( 326 ) In:< _mk_dlts > Fr:[4]gardning( 347 )  >  : 'hyphen=huxBCET=?"_mk_dlts"' BEGINS ' ~~~ ~~~ ~~~ ' '2>3'
+ At:[5]gardning( 329 ) In:< _mk_dlts > Fr:[4]gardning( 347 )  >  : _xtr_hsh
+ At:[5]gardning( 330 ) In:< _mk_dlts > Fr:[4]gardning( 347 )  >  _mkv_pre
+ At:[6]gardning( 245 ) In:< _mkv_pre > Fr:[5]gardning( 330 )  >  : '_xtr_hsh=?"_mkv_pre"' BEGINS ' ~~~ ~~~ ~~~ ' '3>4'
+ At:[6]gardning( 246 ) In:< _mkv_pre > Fr:[5]gardning( 330 )  >  : 'if now file exists'
+ At:[6]gardning( 247 ) In:< _mkv_pre > Fr:[5]gardning( 330 )  >  [[ -v xtr_senv_now ]]
+ At:[6]gardning( 259 ) In:< _mkv_pre > Fr:[5]gardning( 330 )  >  : '_mkv_pre ENDS  ' ' ~~~ ~~~ ~~~ ' '4>3'
+ At:[5]gardning( 331 ) In:< _mk_dlts > Fr:[4]gardning( 347 )  >  _mkv_now
+ At:[6]gardning( 265 ) In:< _mkv_now > Fr:[5]gardning( 331 )  >  : '_mkv_pre=?"_mkv_now"' BEGINS ' ~~~ ~~~ ~~~ ' '3>4'
+ At:[6]gardning( 270 ) In:< _mkv_now > Fr:[5]gardning( 331 )  >  mktemp -p /tmp --suffix=.scf.705850.4356.xtr
+ At:[6]gardning( 270 ) In:< _mkv_now > Fr:[5]gardning( 331 )  >  xtr_senv_now=/tmp/tmp.a91vrCjAg8.scf.705850.4356.xtr
+ At:[6]gardning( 273 ) In:< _mkv_now > Fr:[5]gardning( 331 )  >  set
+ At:[6]gardning( 274 ) In:< _mkv_now > Fr:[5]gardning( 331 )  >  env
+ At:[6]gardning( 275 ) In:< _mkv_now > Fr:[5]gardning( 331 )  >  : '_mkv_now ENDS  ' ' ~~~ ~~~ ~~~ ' '4>3'
+ At:[5]gardning( 332 ) In:< _mk_dlts > Fr:[4]gardning( 347 )  >  _mkv_dlt
+ At:[6]gardning( 281 ) In:< _mkv_dlt > Fr:[5]gardning( 332 )  >  : '_mkv_now=?"_mkv_dlt"' BEGINS ' ~~~ ~~~ ~~~ ' '3>4'
+ At:[6]gardning( 282 ) In:< _mkv_dlt > Fr:[5]gardning( 332 )  >  : 'if now and prev'
+ At:[6]gardning( 283 ) In:< _mkv_dlt > Fr:[5]gardning( 332 )  >  [[ -n /tmp/tmp.a91vrCjAg8.scf.705850.4356.xtr ]]
+ At:[6]gardning( 284 ) In:< _mkv_dlt > Fr:[5]gardning( 332 )  >  [[ -v xtr_senv_prev ]]
+ At:[6]gardning( 320 ) In:< _mkv_dlt > Fr:[5]gardning( 332 )  >  : '_mkv_dlt ENDS  ' ' ~~~ ~~~ ~~~ ' '4>3'
+ At:[5]gardning( 333 ) In:< _mk_dlts > Fr:[4]gardning( 347 )  >  : _xtr_hsh
+ At:[5]gardning( 335 ) In:< _mk_dlts > Fr:[4]gardning( 347 )  >  : '_mk_dlts ENDS  ' ' ~~~ ~~~ ~~~ ' '3>2'
+ At:[4]gardning( 349 ) In:< _dbg_pmt > Fr:[3]gardning( 371 )  >  : '                                                           ~~~ ~~ ~ PROMPT ~ ~~ ~~~'
+ At:[4]gardning( 350 ) In:< _dbg_pmt > Fr:[3]gardning( 371 )  >  read -rp 'R+ [./gardning:371]  |  echo cmd after DEBUG trap, $LINENO, 5741?  |: ' _
R+ [./gardning:371]  |  echo cmd after DEBUG trap, $LINENO, 5741?  |: 
+ At:[4]gardning( 351 ) In:< _dbg_pmt > Fr:[3]gardning( 371 )  >  : './gardning:351 ./gardning:371'
+ At:[4]gardning( 353 ) In:< _dbg_pmt > Fr:[3]gardning( 371 )  >  [[ huxBCET =~ x ]]
+ At:[4]gardning( 353 ) In:< _dbg_pmt > Fr:[3]gardning( 371 )  >  set -x
+ At:[4]gardning( 355 ) In:< _dbg_pmt > Fr:[3]gardning( 371 )  >  : '_dbg_pmt ENDS  ' ' ~~~ ~~~ ~~~ ' '2>1'
+ At:[3]gardning( 371 ) In:< _xtrace_ > Fr:[2]gardning( 427 )  >  : './gardning:371 ./gardning:427'
R+ [./gardning:371]  |  cut -c -8 <<< ${nBS[0]##*/}?  |: ^C./gardning: interrupt trap: line 2: unexpected EOF while looking for matching `)'
./gardning: xmalloc: cannot allocate 18446744073709551575 bytes
[liveuser@localhost-live xmal]$ vim gardning 
[liveuser@localhost-live xmal]$ vim ./xmalloc_cannot_allocate_19




#!/bin/bash -CuTEx
#   findscan


#scr_lic='Apache 2 license'
scr_max_age_of_tmp_files='1 minutes ago'
#scr_nm=./findscan
#scr_proper_nm='Find scripts'
#scr_protected_git_dir_1="${HOME}/MYPROJECTS"
#scr_protected_git_dir_2="${HOME}/OTHERSPROJECTS"
scr_repo_nm=scf
#scr_tcode="$(
  #builtin printf '%(%F_%H%M%S)T' 2>&1
  #)"
#scr_version=1.0
#export scr_lic scr_max_age_of_tmp_files scr_nm scr_proper_nm \
  #scr_protected_git_dir_1 scr_protected_git_dir_2 scr_repo_nm \
  #scr_tcode scr_version
#scr_dirnm="${scr_repo_nm}.d" export scr_dirnm

#SC_sevr=error
#SC_shells='(sh|bash|dash|ksh)'
#export SC_sevr SC_shells

fn_bndry=' ~~~ ~~~ ~~~ ' 
fn_lvl=0 
export fn_lvl fn_bndry 
#unset Halt
#halt=' ' 
#declare -rx Halt halt # lower case for nounset
declare -nx nBL=BASH_LINENO nBS=BASH_SOURCE nF=FUNCNAME nL=LINENO

## move this entire path dection down

#unset CDPATH
#readonly CDPATH
#shopt -u sourcepath

#builtin hash -r
#for c in getconf realpath
#do
  #forced_path_search="$(
    #builtin type -P "$c" 2>&1
    #)"
  #if [[ -z "$forced_path_search" ]] ||
    #[[ ! -f "$forced_path_search" ]]
  #then
    #: "${halt:?}"
  #fi
  #builtin hash -p "${forced_path_search}" "$c"
#done
#unset c forced_path_search

#PATH_getconf="$(
  #command -p getconf PATH 2>&1 ||
    #: "${halt:?}"
  #)"
#PATH="${PATH_getconf}:/usr/bin:/usr/sbin:${PATH}"
#export PATH

#unset LC_ALL
#LC_COLLATE="C.UTF-8" LC_CTYPE="C.UTF-8"     # for predictable sorting
#LC_NUMERIC="en_US.UTF-8"                    # for commas in large numbers
#export LC_COLLATE LC_CTYPE LC_NUMERIC

#GREP_COLORS='mt=01;43' 
#export GREP_COLORS

rand_i="${RANDOM}" 
rand_uniq_str="${scr_repo_nm}.${$}.${rand_i}"
rand_lock_nm="${rand_uniq_str}.lock.d" 
rand_f_nm="${rand_uniq_str:?}.xtr"
export rand_i rand_uniq_str rand_lock_nm rand_f_nm


## Undocumented CLI option
#if [[ "$*" =~ rm_locks ]]
#then
  #rm_locks='y' 
  #export rm_locks
#fi

_erx() {
  local exit_code="$?"
  : '_erx BEGINS' "${fn_bndry}" "${fn_lvl}>$(( ++fn_lvl ))"
  echo -e Error: "$@" >&2
  exit "${exit_code}"
  : '_erx ENDS  ' "${fn_bndry}" "${fn_lvl}>$(( --fn_lvl ))"
}
declare -fx _erx
declare -t _erx


# Sub-scripts
declare -ax verb=( '--' )

  # Note: Exit traps don't print accurate trace data in PS4; so use a function

# Processes positional parameters as they were passed to source

function _post_src {
  # enable xtrace and "verbose commands"
  if [[ "$6" == y ]]
  then
    verb=( -v -- )
  # otherwise, neutralize the unused "verbose commands" syntax
  else
    verb=( -- )
  fi

  # enable xtrace and "verbose commands"
  if [[ "$5" == y ]]
  then
    set -x
  fi

  # after `source` returns, `exit` the calling shell with lineno $1.
  if [[ "$4" == y ]]
  then
    # prints script name and line number of script where function's executed
    : called_at: "$1:$2"

    # prints line number of script where function's executed
    exit -1
  fi
  printf '%b' "\e[m"
}
declare -fx _post_src
declare -t _post_src


# Description            # -source- subscript               # 
 # So PS4 is on whenever xtrace is on, and DEBUG trap is always on once defined: 2023-06-18 0840
 : 'Enable debugging'  ;  . './gardning'   "${nL}"   n y y; #exit "$nL"
#!/bin/bash
# Debugging
# shellcheck shell=bash


  # <> Obligatory debugging block
  : "${nBS[0]}:${nL} ${nBS[1]}:${nBL[0]}"
  _post_src "${nBS[0]}" "${nL}" "$@"
  : "${nBS[0]}:${nL} ${nBS[1]}:${nBL[0]}"


# Vars
FUNCNEST=32
# Note: the full -set -o functrace- cmd includes command substitutions 
# and subshells, so -- using CS-s in PROMPT vars messed up xtrace output
close_ps4='\n\e[0;104m+[${#nBS[@]}]${nBS[0]##*/}( ${nL} ) [$(( ${#nBS[@]} - 1 ))]${nBS[1]##*/}( ${nBL[0]} )${nF[0]} [$(( ${#nBS[@]} - 2 ))]${nBS[2]##*/}( ${nBL[1]} )${nF[1]} [$(( ${#nBS[@]} - 3 ))]${nBS[3]##*/}( ${nBL[2]} )${nF[2]} [$(( ${#nBS[@]} - 4 ))]${nBS[4]##*/}( ${nBL[3]} )${nF[3]} \e[m\n    |=\t=|> \e[0;93m '
far_ps4='\e[0;104m+ At:[${#nBS[@]}]$( cut -c -8 <<< ${nBS[0]##*/} )( ${nL} ) In:< $( cut -c -8 <<< ${nF[0]:-""} ) > Fr:[$(( ${#nBS[@]} - 1 ))]${nBS[1]##*/}( ${nBL[0]} ) \e[m > \e[0;93m '
PS4="${far_ps4}" export PS4
export FUNCNEST close_ps4 far_ps4 


#: '<>: Debug functions & traps'

# Print a function trace stack, and capture the FN's LINENO on line 0
function _fun_trc { : "$_"'=?"_fun_trc"' 'BEGINS' "${fn_bndry}" "${fn_lvl}>$(( ++fn_lvl ))"; local line_hyphen="${nL:?}:$-"
  local line=${line_hyphen%:*}
  local hyphen="${line_hyphen#*:}"
  unset line_hyphen
  local i
  local -a ir # indices reversed
  mapfile -t ir < <(
    rev <<< "${!nBS[@]}" | 
    tr ' ' '\n'
    )
  for i in "${ir[@]}"
  do
    printf '( -%d ):%s:%s:%s  ' "${i}" "${nBS[$i+1]:-$0}" "${nBL[$i]:?}" \
      "${nF[$i]:?}"
  done
  echo "( +1 ):${nBS[0]:?}:${line:?}:_fun_trc:${nL}"
  [[ "${hyphen:?}" =~ x ]] && 
    set -x
  : '_fun_trc ENDS' "${fn_bndry}" "${fn_lvl}>$(( --fn_lvl ))"
}
declare -fx _fun_trc
declare -t _fun_trc


## 'exit' function: name is intended, at global scope, to supercede builtin
#function exit { : "$_"'=?"exit"' 'BEGINS' "${fn_bndry}" "${fn_lvl}>$(( ++fn_lvl ))"
  #unset PS4
  #printf '\e[m'
  #builtin exit "${nL}"
#}
#declare -fx exit
#declare -t exit


# xmalloc bug 01: with the INT trap function and trap definition commented out
#+ the bug went away

# xmal bug 02:...and with the INT trap section uncommented, the bug reappeared

function _trp_int { : #"$_"'=?"_trp_int"' 'BEGINS' "${fn_bndry}" "${fn_lvl}>$(( ++fn_lvl ))" # xmal bug 10: commenting everything after the -colon- in this this command ...bug persists
  #set -x           # xmal bug 04: commenting out this one command ...bug persists
  #trap - INT       # xmal bug 05: commenting out this one command ...bug persists

  # xmal bug 03: commenting out blocks regarding removal of previous log 
  # files... bug persists

  ## accommodating set -u
  #local a_xtr_files=( xtr_time_f xtr_senv_prev xtr_senv_now xtr_senv_delt )
  #for v in "${!a_xtr_files[@]}"
  #do
    #[[ ! -v "${a_xtr_files[v]}" ]] &&
      #unset 'a_xtr_files[v]'
  #done

  ## remove all the current xtrace environment log files
  #for v in "${!a_xtr_files[@]}"
  #do
    #local f="${!a_xtr_files[v]}"
  
    ## as possible, add each to an array $rm_list
    #if [[ -f "${f}" ]] && 
      #[[ ! -L "${f}" ]] && 
      #[[ -O "${f}" ]]
    #then
      #rm_list+=( "${f}" )
    #fi
  #done
  #unset f xtr_time_f xtr_senv_prev xtr_senv_now xtr_senv_delt

  ## if there are any files in array $rm_list, then remove then all at once
  #if [[ -n "${rm_list[*]:0:8}" ]]
  #then
    #if ! rm -f --one-file-system --preserve-root=all "${verb[@]}" "${rm_list[@]}"
    #then
      #_erx "rm failed, line ${nL}"
    #fi
  #fi
  #unset rm_list

  # reset the terminal prompt color
  #unset PS4      # xmal bug 06: commenting out this one command ...bug persists
  #printf '\e[m'  # xmal bug 07: commenting out this one command ...and persists
  
  # kill the script with INT
  #command -p kill -s INT "$$"  # xmal bug 08: commenting this command ...persists
  #: '_trp_int ENDS' "${fn_bndry}" "${fn_lvl}>$(( --fn_lvl ))" # xmal bug 09: commenting this command ...persists
}
declare -fx _trp_int
declare -t _trp_int


# redefine the INT trap
#trap ': "${nBS[0]}:${nL} ${nBS[1]}:${nBL[0]}"; _trp_int; : "${nBS[0]}:${nL} ${nBS[1]}:${nBL[0]}"' INT # xmal 11: this trap command was all on one line originally; copying it and splitting the trap args into multiple lines. ...bug persists
#trap _trp_int INT                                # xmal 16:  copied trap and replaced _trp_int with _-_ -- bug disappears
trap - INT                                        #           Note: clearing the INT trap avoids the bug
trap _trp_int INT                                 # xmal 17:  copied trap def anew to exec _trp_int again: bug reappears
                                                  # xmal 15: put trap args back on all one line, and removed single quotes: persists
      #: "${nBS[0]}:${nL} ${nBS[1]}:${nBL[0]}";   # xmal 14: removed this one cmd from trap def; persists
      #: "${nBS[0]}:${nL} ${nBS[1]}:${nBL[0]}" \  # xmal 13: removed this one cmd from trap def; persists
                                                  # xmal 12, added x2 newlines and backslashes: persists


#: 'Some standard data- & file-maintenance functions' 
## Probably not nec in final script

#function _fun_bak { : "$_"'=?"_fun_bak"' 'BEGINS' "${fn_bndry}" "${fn_lvl}>$(( ++fn_lvl ))"
  ## for each of multiple input files
  #for filename_a in "${@}"; do
    ## test verifying existence of input
    #if sudo /bin/test -f "${filename_a}"; then 

      ## Bug: Why does this ^ test req sudo when this test \/ doesnt?
      ## Requires use of _fun_bak or _fun_bak to debug this.
      ## -~line 2000, 15 May-

      ## if the destination -.bak- file already exists,
      ## then age it first.
      #if [[ -f "${filename_a}.bak" ]]; then 
        #if [[ -s "${filename_a}.bak" ]]; then 
          #return
        #else
          #sudo  rm --one-file-system --preserve-root=all -f -- \
            #"${filename_a}.bak"
        #fi
      #fi   
      ## write a new .bak file
      #sudo rsync -acq -- "${filename_a}"{,.bak} \
        #|| _erx "${nL}"
    ## if input file DNE, then print an error and exit
    #else 
      #{    
        #echo WARNING: file DNE "${filename_a}"
        #return
      #}    
    #fi   
  #done 
  #: '_fun_bak ENDS  ' "${fn_bndry}" "${fn_lvl}>$(( --fn_lvl ))"
#}


#function _wrt_ary { : "$_"'=?"_wrt_ary"' 'BEGINS' "${fn_bndry}" "${fn_lvl}>$(( ++fn_lvl ))"
  ## Write each array to a file on disk.
  ## Usage: _wrt_ary [arrays]
  #write_d_b="${curr_time_ssubd}arrays"
  #if [[ ! -d "${write_d_b}" ]]; then
    #sudo mkdir -p -- "${write_d_b}" \
      #|| _erx "${nL}"
  #fi
  ## for each of multiple input array names
  #for unquotd_array_nm_b in "${@}"; do
    ## create local variables, for use as both array and string
    #local -n nameref_b="${unquotd_array_nm_b}"
    #array_nm="${unquotd_array_nm_b}"
    #write_f_b="${write_d_b}/_${sc_sev_abrv}"
    #write_f_b+="_${ABBREV_REL_SEARCH_DIRS}_${array_nm}"
    #decl_o="$(
      #declare -p "${array_nm}" 2>&1
      #)"

    ## Bug? When array correctly is empty: 'declare -p ... > ||' ?
    ## requires use of _wrt_ary or _wrt_ary to debug this.
    ## ~line 2000, 15 May-

    ## if the input array holds no data, then populate it
    #if [[ ! -v nameref_b[@] ]]; then
      #nameref_b=( [0]='_wrt_ary: Empty array' )
    #fi
    ## then write a data file to disk
    #[[ -n "${decl_o}" ]] &&
      #cat "${decl_o}" > "${write_f_b}" # stderr to console
    ## write a backup of the new data file
    #_fun_bak "${write_f_b}"
  #done
  #: '_wrt_ary ENDS  ' "${fn_bndry}" "${fn_lvl}>$(( --fn_lvl ))"
#}



#: '<> Debug: "Full xTrace" variables and functions'

##   _xtr_hsh: If xtrace was previously on, then on first execution
## of this function, turn xrtrace off, and on second execution, turn
## xtrace back on and forget about this function's settings. If xtrace
## was previously off, then leave it off.

## Error: the code is "$_" should point to _mkv_pre, but instead, its still defined as _xtr_hsh
## +[5]gardening.sh(308) <_mk_delt> [4]gardening.sh(326)  >  : _xtr_hsh
## +[5]gardening.sh(310) <_mk_delt> [4]gardening.sh(326)  >  _mkv_pre
## +[6]gardening.sh(247) <_mk_v_se> [5]gardening.sh(310)  >  : _xtr_hsh BEGINS ' +++ +++ +++ ' '3>4'
## +[6]gardening.sh(248) <_mk_v_se> [5]gardening.sh(310)  >  : 'if now file exists'
## +[6]gardening.sh(249) <_mk_v_se> [5]gardening.sh(310)  >  [[ -n '' ]]


#function _xtr_hsh { : "$_"'=?"_xtr_hsh"' 'BEGINS' "${fn_bndry}" "${fn_lvl}>$(( ++fn_lvl ))"
  ## If xtrace is on...
  #if [[ "$-" =~ x ]]; then
    ## ...then record its state
    #local -gx xtrace_prev
    ## and turn xtrace off
    #set -
  ## but if xtrace is off...
  #else
    ## ...then if xtrace was previously on...
    #: 'if prev'
    #if [[ -v xtrace_prev ]]; then
      ## ...then restore xtrace and unset the record of its state
      #set -x
      #unset xtrace_prev
    ## but if xtrace is off and was previously off... -return-.
    #fi
  #fi
  #: '_xtr_hsh ENDS  ' "${fn_bndry}" "${fn_lvl}>$(( --fn_lvl ))"
#}
#declare -fx _xtr_hsh
#declare -t _xtr_hsh


#   Remaining functions: A set of functions for printing changes in
# shell variables and parameters between each execution of a command;
# for use when the DEBUG trap is enabled.
function _mkv_pre { : "$_"'=?"_mkv_pre"' 'BEGINS' "${fn_bndry}" "${fn_lvl}>$(( ++fn_lvl ))"
  : 'if now file exists'
  if [[ -v xtr_senv_now ]]; then
    : 'if prev file exists'
    if [[ -v xtr_senv_prev ]]; then
      : 'remove prev file'
      sync -f
      unlink -- "${xtr_senv_prev}"
      sync -f
      wait -f
    fi
    # turn the "now" file into the "prev" file
    xtr_senv_prev="${xtr_senv_now}"
  fi
  : '_mkv_pre ENDS  ' "${fn_bndry}" "${fn_lvl}>$(( --fn_lvl ))"
}
declare -fx _mkv_pre
declare -t _mkv_pre


function _mkv_now { : "$_"'=?"_mkv_now"' 'BEGINS' "${fn_bndry}" "${fn_lvl}>$(( ++fn_lvl ))"
  
  # create 'now' file
  xtr_senv_now="$(
    mktemp -p /tmp --suffix=."${rand_f_nm}" 2>&1
    )"
  
  # output data to new file
  set >> "${xtr_senv_now}" # stderr to term
  env >> "${xtr_senv_now}" # stderr to term
  : '_mkv_now ENDS  ' "${fn_bndry}" "${fn_lvl}>$(( --fn_lvl ))"
}
declare -fx _mkv_now
declare -t _mkv_now


function _mkv_dlt { : "$_"'=?"_mkv_dlt"' 'BEGINS' "${fn_bndry}" "${fn_lvl}>$(( ++fn_lvl ))"
  : 'if now and prev'
  if [[ -n "${xtr_senv_now}" ]] \
    && [[ -v xtr_senv_prev ]];
  then
    : 'if delta'
    if [[ -v xtr_senv_delt ]]; then
      
      # add the current delta data to the history thereof
      cat "${xtr_senv_delt}" >> "${xtr_delta_sum_f}" # stderr to term
      
      # and unlink the current delta data file
      sync -f
      unlink -- "${xtr_senv_delt}"
      sync -f
      wait -f
    fi
    
    # create a new delta file, each time
    xtr_senv_delt="$(
      mktemp -p /tmp --suffix=."${rand_f_nm}.A" 2>&1
      )"
      
      # write the diff of the 'prev' and 'now' files to the new 'delta' file
      diff --color=always --palette='ad=1;3;38;5;190:de=1;3;38;5;129' --suppress-{common-lines,blank-empty} "${xtr_senv_prev}" "${xtr_senv_now}" >> "${xtr_senv_delt}"
   
    # Keep this section 
    # set colors for wc output
    #GREP_COLORS='mt=01;101' export GREP_COLORS
    #wc "${xtr_senv_delt}" | grep --color=always -E '.*'
    #GREP_COLORS='' export GREP_COLORS
    #printf '\e[m'
    # reset colors for grep output
    #GREP_COLORS='mt=01;43' export GREP_COLORS
    #grep --color=always -E '.*' < "${xtr_senv_delt}"
    
    sudo cat "${xtr_senv_delt}"
  fi

  : '_mkv_dlt ENDS  ' "${fn_bndry}" "${fn_lvl}>$(( --fn_lvl ))"
}
declare -fx _mkv_dlt
declare -t _mkv_dlt


function _mk_dlts { : "$_"'=?"_mk_dlts"' 'BEGINS' "${fn_bndry}" "${fn_lvl}>$(( ++fn_lvl ))"
  
  # Note: comment out _xtr_hsh with : -and not #-
  : _xtr_hsh
  _mkv_pre
  _mkv_now
  _mkv_dlt
  : _xtr_hsh
  
  : '_mk_dlts ENDS  ' "${fn_bndry}" "${fn_lvl}>$(( --fn_lvl ))"
}
declare -fx _mk_dlts
declare -t _mk_dlts


function _dbg_pmt { : '_dbg_pmt BEGINS' "${fn_bndry}" "${fn_lvl}>$(( ++fn_lvl ))"

  echo _dbg_pmt  
  _fun_trc
  local hyphen="$-"
  
  _mk_dlts
  
  : '                                                           ~~~ ~~ ~ PROMPT ~ ~~ ~~~'
  read -rp "R+ [${nBS[1]}:${nBL[0]}]  |  ${BASH_COMMAND}?  |: " _
  : "${nBS[0]}:${nL} ${nBS[1]}:${nBL[0]}"
  
  [[ "${hyphen}" =~ x ]] && set -x
  
  : '_dbg_pmt ENDS  ' "${fn_bndry}" "${fn_lvl}>$(( --fn_lvl ))"
}
declare -fx _dbg_pmt
declare -t _dbg_pmt


# Bug? for the line numbers in _fun_trc to be correct, this trap
# command must have two separate command parsings on the same line.

# Bug? within trap, the command after _dbg_pmt has line number of 351 [trap(lineno)+1], even though both commands are on line 350.

function _xtrace_ { : "$_"'=?"_xtrace_"' 'BEGINS' "${fn_bndry}" "${fn_lvl}>$(( ++fn_lvl ))"
  
  # PIUSV = "Prints In Underscore Shell Variable"
  : "${nBS[0]}:${nL} ${nBS[1]}:${nBL[0]}, 28666"
  trap 'echo DEBUG trap; _fun_trc; : "${nBS[0]}:${nL} ${nBS[1]}:${nBL[0]}  |  PIUSV"; _dbg_pmt "$_"; : "${nBS[0]}:${nL} ${nBS[1]}:${nBL[0]}"' DEBUG; 
    echo cmd after DEBUG trap, $LINENO, 5741
  : "${nBS[0]}:${nL} ${nBS[1]}:${nBL[0]}, 21506"
  
  : '_xtrace_ ENDS  ' "${fn_bndry}" "${fn_lvl}>$(( --fn_lvl )), 26149"
}
declare -fx _xtrace_
declare -t _xtrace_




: '<> Delete any left over xtrace files from -mktemp -p /tmp-'

# Vars
xtr_time_f="/tmp/tmp.mtime_file.${rand_f_nm}"
xtr_delta_sum_f="$(
  mktemp -p /tmp --suffix=."${rand_f_nm}.E" 2>&1
  )"
export rand_f_nm xtr_time_f xtr_delta_sum_f
unset f xtr_rm_list xtr_files

# Create the xtrace time file
touch -d "${scr_max_age_of_tmp_files:?}" "${xtr_time_f}"

# Remove any errant xtrace log files

# Get the list of remaining xtrace log files -older than the time file-
mapfile -d '' -t xtr_files < <(
  find -P /tmp -maxdepth 1 -type f \
    -name "tmp.[a-zA-Z0-9]*.${scr_repo_nm:?}.[0-9]*.[0-9]*.xtr*" \
    '!' -newer "${xtr_time_f}" '!' -name "${xtr_time_f##*/}" -print0
  )

# ...if they're -if inodes are- for files & not symlinks, & owned by
# the same EUID....
for f in "${xtr_files[@]}"; do
  if [[ -f "${f}" ]] && [[ ! -L "${f}" ]] && [[ -O "${f}" ]]; then

    # then protect them and add then to an array $xtr_rm_list
    chmod "${verb[@]}" 000 "$f" ||
	  _erx "${nL}" "$f"
    xtr_rm_list+=( "${f}" )
  fi
done
unset f

# remove the $xtr_rm_list files all at once
if [[ -n "${xtr_rm_list[*]:0:8}" ]]; then
  rm -f --one-file-system --preserve-root=all "${verb[@]}" "${xtr_rm_list[@]}" ||
    _erx "${nL}"
fi
unset xtr_rm_list xtr_files



  # <> Obligatory debugging block
  _xtrace_ 3580
  : 31722
  : "${nBS[0]}:${nL} ${nBS[1]}:${nBL[0]}"
  exit 101
