# priority
# 
#. L = Later
#. D = Done
#. 
#   purpose -- sys admining, security, etc
#.    L pre-curated lists? 
#.    L keyword for man -k search?
#.    dnf groups?
#   ubiquity -- datasets, each major distro
#.    `command -p`
#     L sqlite
#
#   search patterns, ie, how likely to be exec'd
#                                                 syms    decend
#.    1.  found w only `getconf PATH` and `find`
#     2.  in "standard PATH" and `find`
#     .  in actual PATH
#.    ?  non-sym via find
#.    ?  follow sym via find
#     ?  `compgen` knows of it
#.    ?  `command -p` knows of it - also ubiquity
#
#     . per fsroot dir search, no syms - ie, partial disk search
#.    . full disk search, indicriminate
#
#     sourcable scripts wo #!'s -- `file` output, ascii text
#.      Have no #! & No execute bit set, per POSIX
#     L default vs everything installs?
#     L distro stats on most popular pkg installs?
#   bugginess of scripts
#.    `bash -n`
#     SC "score" -- array or disk files, per target file
#.    Additional linters online
#     L kcov (avail in F37 repos) --
#     L bashdb (na in repos) -- 
#   reliableness of ID'ing scripts
#     by #!
#       D character encoding -- historically resolved issue
#       D endianness -- rare issue
#     by `file` magic
#     L by active use
#     L   atimes vs ctimes, of ascii files per `file`
#.    L   read 1st 128 byyes w dd? to avoid atime change? 
#.    L     file's byte location on disk?
#.    L     how to get time stats wo changing them 

# sort by rpm
# -r [rpm|all]
# -d [history integer]
# -V verify rpm
# -P search files in PATH
# -h use `hash` to track usage
# -i verify interpreter
# -c verify crashbang
# -p verify PATH
# -D use persistent file structure
# -v verbose
# -h help
# -s find / include source scripts
# -N do not write anything to disk
# -a alphanumeric sort


# Notes

# https://unix.stackexchange.com/questions/171346/security-implications-of-forgetting-to-quote-a-variable-in-bash-posix-shells
#
# setgid / setuid scripts or interpreters
# system() in php/perl/python
# snippets in man and info pages 
# less has LESSCHARSET=utf-8
# https://github.com/bats-core/bats-core

# Note also, whether there are any http / curl / wget / network commands
#   how old the scripts are, ie, mtime/copyright year/...
# grep for 

# add'l interpreters: csh zsh tclsh awk perl python ruby
# add'l tests: bash-n
# add'l searches: man pgs, info pgs, sourcable files
# add'l analyzers: bashdb bats kcov
# grep for: excuted variables, input validation, network commands, system calls per language, 
#     grep -iE 'exec.*[tu]cp'
#     grep -iE 'exec.*host'
#     grep -iE '(telnet|nc|ftp|curl|wget|...)
#   TODO's and FIXME's, requests for user input
# measure per-script usage: atime? audit? hash? mtime?
# memory usage: do not write to disk, use persistent storage, use temp files
# add'l package managers: apt cargo dpkg flatpak gem npm pacman pip snap zypper 
# report_simple_stats = yes
# select one rpm
# test for setuid & setgid: scripts, interpreters, files / bins sourced / executed by scritps
# sort order: alnum, per dnf history transaction number, by rpm name
# scanning binary: dd od strings
# target disk: attached storage, unmounted iso
# verbose = yes
# add'l verify: crashbangs, interpreters, rpms
