#!/bin/bash -x


[[ "$UID" == 0 ]] || {
  echo must be root
  exit 1
}



# Online Git Pro book:
#   https://git-scm.com/book/en/v2/Git-Basics-Recording-Changes-to-the-Repository

# fixing `git push` error due to private email
#   https://stackoverflow.com/questions/43378060/meaning-of-the-github-message-push-declined-due-to-email-privacy-restrictions
#   git commit --amend --reset-author

umask 077
for f in ~/.bashrc /home/liveuser/.bashrc; do 
  if ! grep -q 'EDITOR=/usr/bin/vim' "$f"; then
    echo 'EDITOR=/usr/bin/vim'
  fi
done
      
ping -c 1 8.8.8.8 ||
  exit "$LINENO"
timedatectl set-local-rtc 0
timedatectl set-timezone America/Vancouver
systemctl start chronyd.service
chronyc makestep




# Install git
dnf -y --security upgrade; 
dnf -y install info ShellCheck git gh kcov




# Basic settings
git config --system user.name "Wiley Young" # Necc
git config --system user.email '84648683+wileyhy@users.noreply.github.com' # Necc

git config --system core.editor vim
git config --system core.pager '/usr/bin/less'
git config --system help.autocorrect '300'
git config --system init.defaultBranch 'main'



# Create some files
umask 173

gitmesg=/etc/.gitmessage_system
cat <<EOF>"$gitmesg"
Subject line (try to keep under 50 characters)

Multi-line description of commit,
feel free to be detailed.

[Ticket: X]
EOF
git config --system commit.template "$gitmesg"


gitignr=/etc/.gitignore_system
cat <<EOF>"$gitignr"
*~
.*.swp
.DS_Store
EOF
git config --system core.excludesfile "$gitignr"

umask 177
cat <<EOF>~/.vimrc
" per google:
set number

" per https://stackoverflow.com/questions/234564/tab-key-4-spaces-and-auto-indent-after-curly-braces-in-vim
filetype plugin indent on
" show existing tab with 2 spaces width
set tabstop=2
" when indenting with '>', use 2 spaces width
set shiftwidth=2
" On pressing tab, insert 2 spaces
set expandtab
EOF


for f in /etc/git* /etc/.git*; do
  chmod 0604 "$f"
done

for f in "$gitmesg" "$gitignr" ~/.vimrc; do
  rsync -ca "$f" /home/liveuser
  chown 1000:1000 "/home/liveuser/${f##*/}"
  chmod 0400 "/home/liveuser/${f##*/}"
done



# Colors
# git ui colors: normal black red green yellow blue magenta cyan white
# git ui attributes: bold dim ul (underline blink reverse
git config --system color.diff 'always'
git config --system color.diff.meta 'blue black bold'
git config --system color.interactive 'always'
git config --system color.status 'always'
git config --system color.ui 'true'
git config --system color.ui 'auto'


mapfile -d '' -t conf_f < <( 
  find ~ -type f -name 'set-up-git_v[0-9]*_user' -print0 )

if [[ "${#conf_f[@]}" -ne 1 ]]; then
  echo 'now do the regular user bit'
elif [[ -f "${conf_f[*]}" ]]; then
  chown 1000:1000 "${conf_f[*]}"
  chmod 0700 "${conf_f[*]}"
  rsync -ca "${conf_f[*]}" /home/liveuser
  echo now execute "/home/liveuser/${conf_f[*]##*/}" as liveuser
else
  echo need ./set-up-git_v[0-9]*_user 
fi

